// Mocks generated by Mockito 5.4.0 from annotations
// in video_streaming/test/test_util/mock/repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:video_streaming/data/model/video_list_model.dart' as _i3;
import 'package:video_streaming/data/network/api_client/video_api_client.dart'
    as _i2;
import 'package:video_streaming/data/repository/video_repo.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVideoApiClient_0 extends _i1.SmartFake
    implements _i2.VideoApiClient {
  _FakeVideoApiClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoListModel_1 extends _i1.SmartFake
    implements _i3.VideoListModel {
  _FakeVideoListModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VideoRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoRepo extends _i1.Mock implements _i4.VideoRepo {
  MockVideoRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.VideoApiClient get apiClient => (super.noSuchMethod(
        Invocation.getter(#apiClient),
        returnValue: _FakeVideoApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
      ) as _i2.VideoApiClient);
  @override
  _i5.Future<_i3.VideoListModel> getVideoList(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVideoList,
          [keyword],
        ),
        returnValue: _i5.Future<_i3.VideoListModel>.value(_FakeVideoListModel_1(
          this,
          Invocation.method(
            #getVideoList,
            [keyword],
          ),
        )),
      ) as _i5.Future<_i3.VideoListModel>);
}
